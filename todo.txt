*2014.12.18 11:20:02 
jump up to a simple script to help with this task

pose + journal server adds too many levels of abstraction for right now (they're useful later)

create the summary while loading the Journal...
can load many Journal objects while walking a path.

Should also do a scan of binary data location (looking for photos)

similar process to loading a journal server:
python /c/moments/moments/server.py /list/of/repositories

might want to note what journal directories are included with summary


*2011.01.17 22:14:36 summary object summarize
a way to automatically summarize a day...
tag cloud for the day, but base it on time?
can then compare that with priorities
(if one day is possible, should be possible with other time frames)

load a journal
extract a day (e.g. yesterday)
generate timeline based on tags
if there are gaps, it will be imprecise
but that is better than nothing

after a pause
options from root should start floating at random
a mouse movement in that direction should tune to branches in that vicinity
a click should navigate to that node, then continue the random options
double click to lock on that node and navigate it as normal (scrollable)

also [2014.12.14 18:35:38] 
some attempt at this has been made using pose.timeline() and pose.range()
(which utilize calls to moments server)
this process takes a *long* time to generate though!

*2014.12.14 18:18:17 
would be nice to cache previously generated summary data
that would make looking things up much easier
those caches should only be read only (until a regeneration is requested)

also [2014.12.14 18:38:59] 
this cache could be updated as needed during the initial load...
that already takes some time, reading everything from file

*2014.12.14 18:29:43 
would be nice if cached data could be easily formatted in a template...
maybe standard web application is sufficient for this.

*2014.12.14 18:25:54 
some overlap with summary concepts as with disk utility project
in that, it would be nice to summarize the contents of a directory
and keep that meta data around for future reference
also keep track of when last scan occurred, for freshness indication

*2014.12.14 18:13:27 
include photos in summary too

*2014.12.14 18:24:04 
full text search
(this is similar to doing a grep -r on journal directory (maybe start by using that!), but it would be nice to have a unified interface for searches)



*2009.08.09 03:07:12 todo pose
should have a format for browser 
represent heirarchies 
so they can be navigated with left, right, up down
different zoom levels

*2011.12.31 09:57:59 
tags for tagger should be read and written somewhere external to the repository... easily configured

